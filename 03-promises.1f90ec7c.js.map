{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,kBAC/BC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAChCG,EAAOJ,SAASC,cAAc,SAC9BI,EAASL,SAASM,iBAAiB,SACnCC,EAAYP,SAASC,cAAc,mBA6CzC,SAASO,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,SAAUA,EAAUQ,MAAOP,IAErCG,EAAO,CAAEJ,SAAUA,EAAUQ,MAAOP,GAAQ,GAE7CA,EAAM,G,CAnDbX,EAAMmB,mBAAmB,cAAe,QACxChB,EAAKgB,mBAAmB,cAAe,QACvCf,EAAOe,mBAAmB,cAAe,QACzCd,EAAKe,MAAMC,QAAU,OACrBhB,EAAKe,MAAME,UAAY,OACvBd,EAAUY,MAAMG,OAAS,UACzBjB,EAAOkB,SAAQC,IACbA,EAAGL,MAAMM,OAAS,YAAY,IAIhClB,EAAUmB,iBAAiB,SAE3B,SAAqBC,GAEnB,GADAA,EAAIC,iBACgB,KAAhB7B,EAAM8B,OAA+B,KAAf3B,EAAK2B,OAAiC,KAAjB1B,EAAO0B,MACpD,OAAOC,EAAAjC,GAASkC,OAAOC,QAAQ,6BAC1B,IAAKjC,EAAM8B,MAAQ,IAAM3B,EAAK2B,MAAQ,IAAM1B,EAAO0B,OAAS,EACjE,OAAOC,EAAAjC,GAASkC,OAAOC,QACrB,oEAGJxB,EAAc,EAAGT,EAAM8B,OACpBI,MAAK,EAACxB,SAAEA,EAAUQ,MAAAiB,KACjBJ,EAAAjC,GAASkC,OAAOI,QAAQ,qBAAqB1B,QAAeyB,SAE7DE,OAAM,EAAC3B,SAAEA,EAAUQ,MAAAoB,KAClBP,EAAAjC,GAASkC,OAAOO,QAAQ,oBAAoB7B,QAAe4B,SAE/D,IAAIE,GAAcxC,EAAM8B,QAAS3B,EAAK2B,MACtC,IAAK,IAAIW,EAAI,EAAGA,GAAKrC,EAAO0B,MAAOW,GAAK,EACtChC,EAAcgC,EAAI,EAAGD,GAClBN,MAAK,EAACxB,SAAEA,EAAUQ,MAAAwB,KACjBX,EAAAjC,GAASkC,OAAOI,QAAQ,qBAAqB1B,QAAegC,SAE7DL,OAAM,EAAC3B,SAAEA,EAAUQ,MAAAyB,KAClBZ,EAAAjC,GAASkC,OAAOO,QAAQ,oBAAoB7B,QAAeiC,SAE/DH,IAAerC,EAAK2B,K","sources":["src/js/03-promises.js"],"sourcesContent":["// Import Notiflix\nimport Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst labels = document.querySelectorAll('label');\nconst createBtn = document.querySelector('[type=\"submit\"]');\n\n// Style\ndelay.insertAdjacentHTML('beforebegin', '<br>');\nstep.insertAdjacentHTML('beforebegin', '<br>');\namount.insertAdjacentHTML('beforebegin', '<br>');\nform.style.display = 'flex';\nform.style.marginTop = '50px';\ncreateBtn.style.cursor = 'pointer';\nlabels.forEach(el => {\n  el.style.margin = '0 10px 0 0';\n});\n\n// Promise generator implementation\ncreateBtn.addEventListener('click', handleClick);\n\nfunction handleClick(evt) {\n  evt.preventDefault();\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return Notiflix.Notify.warning('Please fill in all fields');\n  } else if (+delay.value < 0 || +step.value < 0 || +amount.value <= 0) {\n    return Notiflix.Notify.warning(\n      `Numbers couldn't be negativ, amount field have to be more then 0`\n    );\n  }\n  createPromise(1, delay.value)\n    .then(({ position, delay }) =>\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n    )\n    .catch(({ position, delay }) =>\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n    );\n  let delayCount = +delay.value + +step.value;\n  for (let i = 1; i < +amount.value; i += 1) {\n    createPromise(i + 1, delayCount)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`)\n      );\n    delayCount += +step.value;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$labels","querySelectorAll","$47d4ff9957288465$var$createBtn","$47d4ff9957288465$var$createPromise","position","delay5","Promise","resolve","reject","setTimeout","Math","random","delay","insertAdjacentHTML","style","display","marginTop","cursor","forEach","el","margin","addEventListener","evt","preventDefault","value","$parcel$interopDefault","Notify","warning","then","delay1","success","catch","delay2","failure","delayCount","i","delay3","delay4"],"version":3,"file":"03-promises.1f90ec7c.js.map"}